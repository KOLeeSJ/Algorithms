/*
    문자열 s가 주어졌을 때, s의 각 위치마다 자신보다 앞에 나왔으면서, 자신과 가장 가까운 곳에 있는 같은 글자가 어디 있는지 알고 싶습니다.
    예를 들어, s="banana"라고 할 때,  각 글자들을 왼쪽부터 오른쪽으로 읽어 나가면서 다음과 같이 진행할 수 있습니다.

    b는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
    a는 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
    n은 처음 나왔기 때문에 자신의 앞에 같은 글자가 없습니다. 이는 -1로 표현합니다.
    a는 자신보다 두 칸 앞에 a가 있습니다. 이는 2로 표현합니다.
    n도 자신보다 두 칸 앞에 n이 있습니다. 이는 2로 표현합니다.
    a는 자신보다 두 칸, 네 칸 앞에 a가 있습니다. 이 중 가까운 것은 두 칸 앞이고, 이는 2로 표현합니다.
    따라서 최종 결과물은 [-1, -1, -1, 2, 2, 2]가 됩니다.

    문자열 s이 주어질 때, 위와 같이 정의된 연산을 수행하는 함수 solution을 완성해주세요.
*/

#include <string>
#include <vector>

using namespace std;

vector<int> solution(string s) {
    vector<int> answer;

    answer.push_back(-1); // 가장 첫부분은 조건에 관계없이 -1이므로 -1을 answer에 push

    for (int i = 1; i < s.length(); i++) { // 문자열 s[1]부터 전체에 접근하기 위한 반복문 설정

        int cnt = 1; // 거리의 가장 작은 값이 1이므로 cnt를 1로 초기화

        for (int j = i - 1; j >= 0; j--) { // s[i] 번째의 전부터 하나씩 비교하기 위한 반복문

            if (s.at(j) == s.at(i)) { // 동일한 문자가 있다면 반복문을 종료
                break;
            }

            cnt++; // 반복문이 한번 실행될 때마다 거리 cnt를 1씩 증가
        }

        if (cnt != i + 1) { // s[i-1]부터 s[0]까지 탐색하여 일치하는 문자가 없을 경우 cnt는 i+1을 반환하기 때문에 cnt 가 i+1이 아닐 경우 동일한 값을 찾았고 cnt는 거리가 됨
            answer.push_back(cnt);
        }

        else {
            answer.push_back(-1);
        }

    }

    return answer;
}